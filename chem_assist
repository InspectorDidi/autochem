#!/usr/bin/env python3
# -*- coding: utf-8 -*-

from chem_assistant.user_scripts import *
from chem_assistant.core import Settings
from importlib import import_module
import argparse

parser = argparse.ArgumentParser()
parser.add_argument('-m', '--meta', help='Make files using a meta.py file in each subdirectory', action='store_true')
parser.add_argument('-th', '--thermochem', help='Runs thermochemical analysis of frequency calculations. Also acts on subdirectories of the current directory', action='store_true')
parser.add_argument('-r', '--results', help='Finds results of output files with the extension of log or out. Note: also navigates subdirectories', action='store_true')
parser.add_argument('-t', '--tree_from_files', help='Creates a directory tree with relevant job scripts from a directory called "files"', action='store_true')
parser.add_argument('-s', '--settings', help='Indicates a file with settings relevant to the calculation required. In the file, must have a Settings object called sett', action='store')
args = parser.parse_args()

def imported_settings():
    file_to_import = args.settings[:-3] #lose the .py extension
    imported = import_module(file_to_import)
    imp_sett = getattr(imported, 'sett')
    return imp_sett

if args.meta:
   make_files_from_meta('.') 
if args.thermochem:
    thermochemistry('.')
if args.results:
    df = results_table('.')
    print(df)
    done = False
    while not done:
        csv = input('Print to csv? [y/n] ')
        if csv.lower() in ('y', 'n'):
            done = True
            if csv.lower() == 'y':
                filename = input('Filename: ')
                df.to_csv(filename, index=False)
        else:
            print("Please select 'y' or 'n'")    
if args.tree_from_files and args.settings:
    settings = imported_settings()
    xyz_to_tree(settings)

if args.settings:
    settings = imported_settings()
    print(settings)
